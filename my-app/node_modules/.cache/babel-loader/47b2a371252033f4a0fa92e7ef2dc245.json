{"ast":null,"code":"var _jsxFileName = \"/Users/BTodd/Development/chosen/my-app/src/component/Music/routes/Music.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Music.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Music = () => {\n  _s();\n\n  let [videos, setVideos] = useState([]);\n  let playlistId = \"UUwwrP7TPQmlkFHCWdCcYNpw\";\n\n  const youtubeFetch = async call => {\n    const http = new XMLHttpRequest();\n    const url = \"https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&playlistId=\" + playlistId + \"&key=AIzaSyBd26sX_fII61osu5b29kaOlB5odp9uMW4\";\n    http.open(\"GET\", url);\n    http.send();\n\n    http.onload = function () {\n      call(http.responseText);\n    };\n  };\n\n  function mycallback(data) {\n    setVideos(JSON.parse(data).items);\n    console.log(videos);\n  }\n\n  useEffect(() => {\n    youtubeFetch(mycallback);\n  }, [videos.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"musicSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), videos.length !== 0 ? videos.map(vid => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: vid.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"thumbnail\",\n        children: [vid.snippet.thumbnails.default ? vid.snippet.thumbnails.default.url : vid.snippet.thumbnails.default.url, \"}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Music, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["/Users/BTodd/Development/chosen/my-app/src/component/Music/routes/Music.jsx"],"names":["React","useEffect","useState","Music","videos","setVideos","playlistId","youtubeFetch","call","http","XMLHttpRequest","url","open","send","onload","responseText","mycallback","data","JSON","parse","items","console","log","length","map","vid","snippet","title","thumbnails","default"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAII,UAAU,GAAG,0BAAjB;;AAEA,QAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AAEjC,UAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,UAAMC,GAAG,GAAG,sGAAsGL,UAAtG,GAAmH,8CAA/H;AAEAG,IAAAA,IAAI,CAACG,IAAL,CAAU,KAAV,EAAiBD,GAAjB;AACAF,IAAAA,IAAI,CAACI,IAAL;;AAEAJ,IAAAA,IAAI,CAACK,MAAL,GAAc,YAAY;AACtBN,MAAAA,IAAI,CAACC,IAAI,CAACM,YAAN,CAAJ;AACH,KAFD;AAGH,GAXD;;AAaA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBZ,IAAAA,SAAS,CAACa,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBG,KAAlB,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACH;;AAEDH,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAACS,UAAD,CAAZ;AACH,GAFQ,EAEN,CAACZ,MAAM,CAACmB,MAAR,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKnB,MAAM,CAACmB,MAAP,KAAkB,CAAlB,GAEGnB,MAAM,CAACoB,GAAP,CAAYC,GAAD,iBACP;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACC,OAAJ,CAAYC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAA4BF,GAAG,CAACC,OAAJ,CAAYE,UAAZ,CAAuBC,OAAvB,GAAkCJ,GAAG,CAACC,OAAJ,CAAYE,UAAZ,CAAuBC,OAAvB,CAA+BlB,GAAjE,GAAwEc,GAAG,CAACC,OAAJ,CAAYE,UAAZ,CAAuBC,OAAvB,CAA+BlB,GAAnI;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFH,GAQG,IAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1CD;;GAAMR,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import \"./Music.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst Music = () => {\n\n    let [videos, setVideos] = useState([]);\n    let playlistId = \"UUwwrP7TPQmlkFHCWdCcYNpw\";\n\n    const youtubeFetch = async (call) => {\n\n        const http = new XMLHttpRequest();\n        const url = \"https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&playlistId=\" + playlistId + \"&key=AIzaSyBd26sX_fII61osu5b29kaOlB5odp9uMW4\"\n\n        http.open(\"GET\", url);\n        http.send();\n\n        http.onload = function () {\n            call(http.responseText)\n        };\n    }\n\n    function mycallback(data) {\n        setVideos(JSON.parse(data).items)\n        console.log(videos)\n    }\n\n    useEffect(() => {\n        youtubeFetch(mycallback)\n    }, [videos.length])\n\n    return (\n        <div id=\"musicSection\">\n            <h1>Music</h1>\n            {videos.length !== 0 ? (\n\n                videos.map((vid) => (\n                    <div className=\"videoSection\">\n                        <h5>{vid.snippet.title}</h5>\n                        <img className=\"thumbnail\">{vid.snippet.thumbnails.default ? (vid.snippet.thumbnails.default.url) : vid.snippet.thumbnails.default.url}}</img>\n                    </div>\n                ))\n            ) : null}\n\n        </div>\n    )\n}\n\n\nexport default Music;\n"]},"metadata":{},"sourceType":"module"}